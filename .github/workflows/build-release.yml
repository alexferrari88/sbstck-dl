name: Manual Build and Release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
  release:
    types: [created]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.24.1]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Run tests
        run: go test -v ./...

  build:
    name: Build
    needs: test
    if: success()
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.24.1]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            name: ubuntu
            extension: ""
          - os: macos-latest
            goos: darwin
            goarch: amd64
            name: mac
            extension: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            name: win
            extension: ".exe"
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
        
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          
      - name: Build
        run: |
          env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o sbstck-dl-${{ matrix.name }}-${{ matrix.goarch }}${{ matrix.extension }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbstck-dl-${{ matrix.name }}-${{ matrix.goarch }}
          path: sbstck-dl-${{ matrix.name }}-${{ matrix.goarch }}${{ matrix.extension }}
          
  release-upload:
    name: Attach Artifacts to Release
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          token: ${{ secrets.GITHUB_TOKEN }}